plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}
def androidID = rootProject.ext.androidID
println("========"+rootProject +"====androidID:" +androidID)

android {
    namespace 'com.example.androidpracticeproject'
    compileSdk androidID.compileSdk

    defaultConfig {
        appID.applicationId
        minSdk androidID.minSdk
        targetSdk androidID.targetSdk
        versionCode androidID.versionCode
        versionName androidID.versionName

        testInstrumentationRunner androidID.testInstrumentationRunner
        buildConfigField("boolean", "isModule", String.valueOf(isModule))
        javaCompileOptions {
            annotationProcessorOptions {
                ////app 向java lib 库传参（ARouterProcessor）
                arguments = [AROUTER_MODULE_NAME: project.getName(),"student": "hello javaope!"]

            }
        }
    }

    buildTypes {
        debug{
            buildConfigField("String","debug","\"${url.debug}\"")
        }
        release {
            buildConfigField("String","release","\"${url.release}\"")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
}

dependencies {
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    annotationProcessor 'com.alibaba:arouter-compiler:1.5.1'
    dependenciesID.each{k,v ->implementation v}

    implementation project(path: ':module_common')
    implementation project(path: ':module_cart')
    implementation project(path: ':module_home')
    implementation project(path: ':annotation')
    implementation project(path: ':reflect')
    implementation project(path: ':rxjava')
    annotationProcessor project(path: ':compliler')
}